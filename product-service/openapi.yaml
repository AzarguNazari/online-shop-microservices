openapi: 3.0.0
info:
  title: Product Service API
  version: 1.0.0
  description: API for managing products in the e-commerce platform.
servers:
  - url: https://api.example.com/v1
    description: Production server
paths:
  /products:
    get:
      summary: List all products
      description: Retrieve a list of all products with optional filtering and pagination.
      parameters:
        - name: category
          in: query
          description: Filter products by category (e.g., Electronics, Clothing).
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of products returned (default is 10).
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          description: Offset for pagination (default is 0).
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A list of products.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new product
      description: Create a new product with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductCreateRequest'
      responses:
        '201':
          description: Product created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/{productId}:
    get:
      summary: Get a product by ID
      description: Retrieve detailed information about a specific product.
      parameters:
        - name: productId
          in: path
          required: true
          description: The ID of the product to retrieve.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Product details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a product
      description: Update the details of an existing product.
      parameters:
        - name: productId
          in: path
          required: true
          description: The ID of the product to update.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductUpdateRequest'
      responses:
        '200':
          description: Product updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a product
      description: Delete a product by its ID.
      parameters:
        - name: productId
          in: path
          required: true
          description: The ID of the product to delete.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Product deleted successfully.
        '404':
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /products/{productId}/stock:
    patch:
      summary: Update product stock
      description: Update the stock level of an existing product.
      parameters:
        - name: productId
          in: path
          required: true
          description: The ID of the product to update.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductStockUpdateRequest'
      responses:
        '200':
          description: Product stock updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Product not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Product:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: "p1q2r3s4-t5u6-7890-v1w2-x3y4z5a6b7c8"
        name:
          type: string
          example: "Wireless Noise-Cancelling Headphones"
        description:
          type: string
          example: "High-quality over-ear headphones with active noise cancellation."
        price:
          type: number
          format: float
          example: 89.99
        category:
          type: string
          example: "Electronics"
        stockLevel:
          type: integer
          example: 50
        brand:
          type: string
          example: "SoundMax"
        sku:
          type: string
          example: "SM-12345"
        imageUrl:
          type: string
          example: "https://example.com/images/headphones.jpg"
      required:
        - productId
        - name
        - description
        - price
        - category
        - stockLevel
    ProductCreateRequest:
      type: object
      properties:
        name:
          type: string
          example: "Wireless Noise-Cancelling Headphones"
        description:
          type: string
          example: "High-quality over-ear headphones with active noise cancellation."
        price:
          type: number
          format: float
          example: 89.99
        category:
          type: string
          example: "Electronics"
        stockLevel:
          type: integer
          example: 50
        brand:
          type: string
          example: "SoundMax"
        sku:
          type: string
          example: "SM-12345"
        imageUrl:
          type: string
          example: "https://example.com/images/headphones.jpg"
      required:
        - name
        - description
        - price
        - category
        - stockLevel
    ProductUpdateRequest:
      type: object
      properties:
        name:
          type: string
          example: "Wireless Noise-Cancelling Headphones"
        description:
          type: string
          example: "High-quality over-ear headphones with active noise cancellation."
        price:
          type: number
          format: float
          example: 89.99
        category:
          type: string
          example: "Electronics"
        brand:
          type: string
          example: "SoundMax"
        sku:
          type: string
          example: "SM-12345"
        imageUrl:
          type: string
          example: "https://example.com/images/headphones.jpg"
      required:
        - name
        - description
        - price
        - category
    ProductStockUpdateRequest:
      type: object
      properties:
        stockLevel:
          type: integer
          example: 50
      required:
        - stockLevel
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "Product not found."
      required:
        - code
        - message