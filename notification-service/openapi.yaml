openapi: 3.0.0
info:
  title: Notification Service API
  version: 1.0.0
  description: API for managing notifications in the e-commerce platform.
servers:
  - url: https://api.example.com/v1
    description: Production server
paths:
  /notifications:
    get:
      summary: List all notifications
      description: Retrieve a list of all notifications with optional filtering and pagination.
      parameters:
        - name: userId
          in: query
          description: Filter notifications by user ID.
          schema:
            type: string
            format: uuid
        - name: type
          in: query
          description: Filter notifications by type (e.g., ORDER_CONFIRMATION, SHIPMENT_UPDATE).
          schema:
            type: string
        - name: status
          in: query
          description: Filter notifications by status (e.g., SENT, FAILED).
          schema:
            type: string
        - name: limit
          in: query
          description: Limit the number of notifications returned (default is 10).
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          description: Offset for pagination (default is 0).
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A list of notifications.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notification'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new notification
      description: Create a new notification with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationCreateRequest'
      responses:
        '201':
          description: Notification created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notifications/{notificationId}:
    get:
      summary: Get a notification by ID
      description: Retrieve detailed information about a specific notification.
      parameters:
        - name: notificationId
          in: path
          required: true
          description: The ID of the notification to retrieve.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '404':
          description: Notification not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a notification
      description: Delete a notification by its ID.
      parameters:
        - name: notificationId
          in: path
          required: true
          description: The ID of the notification to delete.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Notification deleted successfully.
        '404':
          description: Notification not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /notifications/{notificationId}/status:
    patch:
      summary: Update notification status
      description: Update the status of an existing notification.
      parameters:
        - name: notificationId
          in: path
          required: true
          description: The ID of the notification to update.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationStatusUpdateRequest'
      responses:
        '200':
          description: Notification status updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Notification not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Notification:
      type: object
      properties:
        notificationId:
          type: string
          format: uuid
          example: "n1o2p3q4-r5s6-7890-t1u2-v3w4x5y6z7a8"
        userId:
          type: string
          format: uuid
          example: "u1v2w3x4-y5z6-7890-a1b2-c3d4e5f6g7h8"
        message:
          type: string
          example: "Your order #123456 has been shipped."
        type:
          type: string
          enum: [ORDER_CONFIRMATION, SHIPMENT_UPDATE, PAYMENT_SUCCESS, PAYMENT_FAILURE]
          example: "SHIPMENT_UPDATE"
        sentAt:
          type: string
          format: date-time
          example: "2023-10-25T15:00:00Z"
        status:
          type: string
          enum: [SENT, FAILED, PENDING]
          example: "SENT"
        channel:
          type: string
          enum: [EMAIL, SMS, PUSH]
          example: "EMAIL"
        metadata:
          type: object
          properties:
            orderId:
              type: string
              format: uuid
              example: "a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8"
            trackingNumber:
              type: string
              example: "TN123456789"
      required:
        - notificationId
        - userId
        - message
        - type
        - sentAt
        - status
        - channel
    NotificationCreateRequest:
      type: object
      properties:
        userId:
          type: string
          format: uuid
          example: "u1v2w3x4-y5z6-7890-a1b2-c3d4e5f6g7h8"
        message:
          type: string
          example: "Your order #123456 has been shipped."
        type:
          type: string
          enum: [ORDER_CONFIRMATION, SHIPMENT_UPDATE, PAYMENT_SUCCESS, PAYMENT_FAILURE]
          example: "SHIPMENT_UPDATE"
        channel:
          type: string
          enum: [EMAIL, SMS, PUSH]
          example: "EMAIL"
        metadata:
          type: object
          properties:
            orderId:
              type: string
              format: uuid
              example: "a1b2c3d4-e5f6-7890-g1h2-i3j4k5l6m7n8"
            trackingNumber:
              type: string
              example: "TN123456789"
      required:
        - userId
        - message
        - type
        - channel
    NotificationStatusUpdateRequest:
      type: object
      properties:
        status:
          type: string
          enum: [SENT, FAILED, PENDING]
          example: "SENT"
      required:
        - status
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "Notification not found."
      required:
        - code
        - message