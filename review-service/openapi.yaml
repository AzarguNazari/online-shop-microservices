openapi: 3.0.0
info:
  title: Review Service API
  version: 1.0.0
  description: API for managing product reviews in the e-commerce platform.
servers:
  - url: https://api.example.com/v1
    description: Production server
paths:
  /reviews:
    get:
      summary: List all reviews
      description: Retrieve a list of all reviews with optional filtering by product ID, user ID, and rating.
      parameters:
        - name: productId
          in: query
          description: Filter reviews by product ID.
          schema:
            type: string
            format: uuid
        - name: userId
          in: query
          description: Filter reviews by user ID.
          schema:
            type: string
            format: uuid
        - name: rating
          in: query
          description: Filter reviews by rating (e.g., 1, 2, 3, 4, 5).
          schema:
            type: integer
            minimum: 1
            maximum: 5
        - name: limit
          in: query
          description: Limit the number of reviews returned (default is 10).
          schema:
            type: integer
            default: 10
        - name: offset
          in: query
          description: Offset for pagination (default is 0).
          schema:
            type: integer
            default: 0
      responses:
        '200':
          description: A list of reviews.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Review'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Create a new review
      description: Create a new review with the provided details.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewCreateRequest'
      responses:
        '201':
          description: Review created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reviews/{reviewId}:
    get:
      summary: Get a review by ID
      description: Retrieve detailed information about a specific review.
      parameters:
        - name: reviewId
          in: path
          required: true
          description: The ID of the review to retrieve.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Review details retrieved successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Review not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      summary: Update a review
      description: Update the details of an existing review.
      parameters:
        - name: reviewId
          in: path
          required: true
          description: The ID of the review to update.
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReviewUpdateRequest'
      responses:
        '200':
          description: Review updated successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '400':
          description: Invalid input data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Review not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete a review
      description: Delete a review by its ID.
      parameters:
        - name: reviewId
          in: path
          required: true
          description: The ID of the review to delete.
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Review deleted successfully.
        '404':
          description: Review not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /reviews/{reviewId}/helpful:
    post:
      summary: Mark a review as helpful
      description: Increment the helpful votes count for a review.
      parameters:
        - name: reviewId
          in: path
          required: true
          description: The ID of the review to mark as helpful.
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Review marked as helpful successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Review'
        '404':
          description: Review not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Review:
      type: object
      properties:
        reviewId:
          type: string
          format: uuid
          example: "r1s2t3u4-v5w6-7890-x1y2-z3a4b5c6d7e8"
        productId:
          type: string
          format: uuid
          example: "p1q2r3s4-t5u6-7890-v1w2-x3y4z5a6b7c8"
        userId:
          type: string
          format: uuid
          example: "u1v2w3x4-y5z6-7890-a1b2-c3d4e5f6g7h8"
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 5
        comment:
          type: string
          example: "Excellent product! The noise cancellation is amazing."
        reviewDate:
          type: string
          format: date-time
          example: "2023-10-26T10:00:00Z"
        verifiedPurchase:
          type: boolean
          example: true
        helpfulVotes:
          type: integer
          example: 12
        images:
          type: array
          items:
            type: string
            example: "https://example.com/reviews/headphones1.jpg"
      required:
        - reviewId
        - productId
        - userId
        - rating
        - comment
        - reviewDate
    ReviewCreateRequest:
      type: object
      properties:
        productId:
          type: string
          format: uuid
          example: "p1q2r3s4-t5u6-7890-v1w2-x3y4z5a6b7c8"
        userId:
          type: string
          format: uuid
          example: "u1v2w3x4-y5z6-7890-a1b2-c3d4e5f6g7h8"
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 5
        comment:
          type: string
          example: "Excellent product! The noise cancellation is amazing."
        verifiedPurchase:
          type: boolean
          example: true
        images:
          type: array
          items:
            type: string
            example: "https://example.com/reviews/headphones1.jpg"
      required:
        - productId
        - userId
        - rating
        - comment
    ReviewUpdateRequest:
      type: object
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
          example: 5
        comment:
          type: string
          example: "Excellent product! The noise cancellation is amazing."
      required:
        - rating
        - comment
    Error:
      type: object
      properties:
        code:
          type: integer
          example: 404
        message:
          type: string
          example: "Review not found."
      required:
        - code
        - message